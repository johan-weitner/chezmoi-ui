// Prisma schema for the database
// Documentation: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Application {
  id               Int                @id @default(autoincrement())
  key              String             @unique
  name             String             @default("")
  desc             String?            @default("")
  bin              String?            @default("")
  short            String?            @default("")
  home             String
  docs             String?            @default("")
  github           String?            @default("")
  whalebrew        String?            @default("")
  apt              String?            @default("")
  brew             String?            @default("")
  cask             String?            @default("")
  cargo            String?            @default("")
  npm              String?            @default("")
  pip              String?            @default("")
  pipx             String?            @default("")
  gem              String?            @default("")
  script           String?            @default("")
  choco            String?            @default("")
  scoop            String?            @default("")
  winget           String?            @default("")
  pkgdarwin        String?            @default("")
  ansible          String?            @default("")
  binary           String?            @default("")
  yay              String?            @default("")
  appstore         String?            @default("")
  pacman           String?            @default("")
  port             String?            @default("")
  done             Boolean            @default(false)
  edited           Boolean            @default(false)
  appTags          ApplicationTag[]
  appGroups        ApplicationGroup[]
}

model Tag {
  id   Int              @id @default(autoincrement())
  name String           @unique
  apps ApplicationTag[]
}

model ApplicationTag {
  application   Application @relation(fields: [applicationId], references: [id])
  applicationId Int
  tag           Tag         @relation(fields: [tagId], references: [id])
  tagId         Int

  @@id([applicationId, tagId])
}

model Group {
  id   Int                @id @default(autoincrement())
  name String             @unique
  apps ApplicationGroup[]
}

model ApplicationGroup {
  application   Application @relation(fields: [applicationId], references: [id])
  applicationId Int
  group         Group       @relation(fields: [groupId], references: [id])
  groupId       Int

  @@id([applicationId, groupId])
}
