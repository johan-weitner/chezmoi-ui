{{ if eq .chezmoi.os "darwin" -}}
#!/bin/bash

brew bundle --no-lock --file=/dev/stdin <<EOF
{{ range .packages.darwin.brews -}}
brew {{ . | quote }}
{{ end -}}
{{ range .packages.darwin.casks -}}
cask {{ . | quote }}
{{ end -}}
EOF
{{ end -}}


{{ range $app, $binary := .packages.darwin.binaryMac -}}
echo "Downloading {{ $binary.name }} from {{ $binary.url }}"
curl -sL {{ $binary.url }} -o {{ $binary.name }} -o '{{ $binary.name }}'

echo "Mounting {{ $binary.name }}"
volume=$(hdiutil attach "{{ $binary.name }}" | grep '/Volumes/' | awk '{ print $3 }')

echo "Volume: $volume"

app_path=$(find "$volume" -name "*.app" -maxdepth 1)
echo "App path: $app_path"

if [ -n "$app_path" ]; then
    echo "Copying $app_path to /Applications"
    cp -R "$app_path" /Applications/
else
    echo "No .app file found in $volume"
    ls -l $volume
fi

echo "Unmounting $volume"
hdiutil detach "$volume"

rm "{{ $binary.name }}"

{{ end -}}

{{ range .packages.darwin.scripts -}}
sh -c "$(curl -fsSL {{ . | quote }})"
{{ end -}}

# If Node isn't installed, install it using volta
if [[! volta list | grep -q node]]; then
  echo "Installing Node LTS..."
  volta install node
fi

if [[! volta list | grep -q pnpm]]; then
  echo "Installing PNPM..."
  volta install pnpm
fi

{{ range .packages.darwin.node -}}
if npm list -g --depth=0 | grep -q "{{ . | quote }}"; then
  echo "{{ . | quote }} is already installed. Skipping..."
else
  echo "Installing Node application {{ . | quote }}..."
  npm install -g "{{ . | quote }}"
fi
{{ end -}}


{{ range .packages.darwin.cargo -}}
cargo install -g "{{ . | quote }}"
{{ end -}}